generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique  // Đánh dấu email là duy nhất
  name          String?  // Tên từ Google (có thể null)
  avatar        String?  // Ảnh đại diện Google
  providerId    String   @unique // ID của user trên Google
  lastLoginTime DateTime?
  role          String   @default("User")
  balance       Decimal  @default(0)

  transactions  TransactionHistory[]
  mphones       MPhone[]
  mpcs          MPC[]
  purchases     PurchaseHistory[]
  userKeys      UserKey[]
}

model TransactionHistory {
  id     Int      @id @default(autoincrement())
  userId Int
  user   User     @relation(fields: [userId], references: [id])
  amount Decimal
  type   String   @default("Deposit")
  date   DateTime @default(now())
}

model MPhone {
  id             Int      @id @default(autoincrement())
  userId         Int
  user           User     @relation(fields: [userId], references: [id])
  phoneId        String
  createdDate    DateTime @default(now())
  expirationDate DateTime
}

model MPC {
  id             Int      @id @default(autoincrement())
  userId         Int
  user           User     @relation(fields: [userId], references: [id])
  pcId           String
  createdDate    DateTime @default(now())
  expirationDate DateTime
}

model ServicePackage {
  id           Int     @id @default(autoincrement())
  name         String
  packageType  String  @default("Thông thường")
  description  String?
  price        Decimal
  keyPC        Int
  keyPhone     Int
  durationDays Int

  purchases PurchaseHistory[]
}

model PurchaseHistory {
  id             Int            @id @default(autoincrement())
  userId         Int
  user           User           @relation(fields: [userId], references: [id])
  packageId      Int
  servicePackage ServicePackage @relation(fields: [packageId], references: [id])
  purchaseDate   DateTime       @default(now())
  expirationDate DateTime
}

model UserKey {
  id             Int      @id @default(autoincrement())
  userId         Int
  user           User     @relation(fields: [userId], references: [id])
  keyPC          Int
  keyPhone       Int
  expirationDate DateTime
}
