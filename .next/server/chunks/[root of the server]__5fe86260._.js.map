{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/TON/Desktop/WEBCODE/NextJS/TFKey/tf-manager/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\r\n\r\nconst prisma = new PrismaClient();\r\nexport { prisma };\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/TON/Desktop/WEBCODE/NextJS/TFKey/tf-manager/app/api/auth/register/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport { prisma } from \"@/lib/prisma\";\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const { username, password } = await req.json();\r\n\r\n    if (!username || !password) {\r\n      return NextResponse.json({ error: \"Vui lòng nhập đầy đủ thông tin\" }, { status: 400 });\r\n    }\r\n\r\n    const existingUser = await prisma.user.findUnique({ where: { username } });\r\n\r\n    if (existingUser) {\r\n      return NextResponse.json({ error: \"Tên đăng nhập đã tồn tại\" }, { status: 400 });\r\n    }\r\n\r\n    const hashedPassword = await bcrypt.hash(password, 10);\r\n\r\n    await prisma.user.create({\r\n      data: { username, password: hashedPassword },\r\n    });\r\n\r\n    return NextResponse.json({ message: \"Đăng ký thành công\" }, { status: 201 });\r\n  } catch (error) {\r\n    return NextResponse.json({ error: \"Lỗi server\" }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;QAE7C,IAAI,CAAC,YAAY,CAAC,UAAU;YAC1B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAiC,GAAG;gBAAE,QAAQ;YAAI;QACtF;QAEA,MAAM,eAAe,MAAM,+GAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YAAE,OAAO;gBAAE;YAAS;QAAE;QAExE,IAAI,cAAc;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA2B,GAAG;gBAAE,QAAQ;YAAI;QAChF;QAEA,MAAM,iBAAiB,MAAM,mIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU;QAEnD,MAAM,+GAAA,CAAA,SAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YACvB,MAAM;gBAAE;gBAAU,UAAU;YAAe;QAC7C;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAqB,GAAG;YAAE,QAAQ;QAAI;IAC5E,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAa,GAAG;YAAE,QAAQ;QAAI;IAClE;AACF","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}