generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                      Int                    @id @default(autoincrement())
  email                   String                 @unique
  name                    String?
  avatar                  String?
  providerId              String                 @unique
  lastLoginTime           DateTime?
  role                    String                 @default("user")
  maxPhone                Int                    @default(0)
  maxPC                   Int                    @default(0)
  level                   Int                    @default(0)
  balance                 Decimal                @default(0.000000000000000000000000000000)
  totalbalance            Decimal                @default(0.000000000000000000000000000000)
  usedPhone               Int                    @default(0)
  usedPC                  Int                    @default(0)
  communityMessages       CommunityMessage[]     @relation("CommunityMessageSender")
  communitySeenMessages   CommunityMessageSeen[]
  communityReactions      CommunityReaction[]
  mpcs                    MPC[]
  mphones                 MPhone[]
  privateMessagesReceived PrivateMessage[]       @relation("PrivateMessageReceiver")
  privateMessagesSent     PrivateMessage[]       @relation("PrivateMessageSender")
  privateSeenMessages     PrivateMessageSeen[]
  privateReactions        PrivateReaction[]
  purchases               PurchaseHistory[]
  sessions                SessionPoint[]
  transactions            TransactionHistory[]
}

model SessionPoint {
  id           Int      @id @default(autoincrement())
  userId       Int
  sessionToken String
  deviceInfo   String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  lastActiveAt DateTime @default(now())
  expiresAt    DateTime
  user         User     @relation(fields: [userId], references: [id])

  @@unique([userId, sessionToken])
}

model CommunityMessage {
  id        Int                    @id @default(autoincrement())
  userId    Int
  content   String
  imageUrls Json
  createdAt DateTime               @default(now())
  replyToId Int?
  isPinned  Boolean                @default(false)
  isDeleted Boolean                @default(false)
  replyTo   CommunityMessage?      @relation("CommunityMessageReplies", fields: [replyToId], references: [id])
  replies   CommunityMessage[]     @relation("CommunityMessageReplies")
  user      User                   @relation("CommunityMessageSender", fields: [userId], references: [id])
  seenBy    CommunityMessageSeen[]
  reactions CommunityReaction[]

  @@index([replyToId], map: "CommunityMessage_replyToId_fkey")
  @@index([userId], map: "CommunityMessage_userId_fkey")
}

model PrivateMessage {
  id         Int                  @id @default(autoincrement())
  senderId   Int
  receiverId Int
  content    String
  imageUrls  Json
  createdAt  DateTime             @default(now())
  isDeleted  Boolean              @default(false)
  receiver   User                 @relation("PrivateMessageReceiver", fields: [receiverId], references: [id])
  sender     User                 @relation("PrivateMessageSender", fields: [senderId], references: [id])
  seenBy     PrivateMessageSeen[]
  reactions  PrivateReaction[]

  @@index([receiverId], map: "PrivateMessage_receiverId_fkey")
  @@index([senderId], map: "PrivateMessage_senderId_fkey")
}

model CommunityReaction {
  id        Int              @id @default(autoincrement())
  messageId Int
  userId    Int
  emoji     String
  message   CommunityMessage @relation(fields: [messageId], references: [id])
  user      User             @relation(fields: [userId], references: [id])

  @@unique([messageId, userId, emoji])
  @@index([userId], map: "CommunityReaction_userId_fkey")
}

model PrivateReaction {
  id        Int            @id @default(autoincrement())
  messageId Int
  userId    Int
  emoji     String
  message   PrivateMessage @relation(fields: [messageId], references: [id])
  user      User           @relation(fields: [userId], references: [id])

  @@unique([messageId, userId, emoji])
  @@index([userId], map: "PrivateReaction_userId_fkey")
}

model CommunityMessageSeen {
  id        Int              @id @default(autoincrement())
  messageId Int
  userId    Int
  seenAt    DateTime         @default(now())
  message   CommunityMessage @relation(fields: [messageId], references: [id])
  user      User             @relation(fields: [userId], references: [id])

  @@unique([messageId, userId])
  @@index([userId], map: "CommunityMessageSeen_userId_fkey")
}

model PrivateMessageSeen {
  id        Int            @id @default(autoincrement())
  messageId Int
  userId    Int
  seenAt    DateTime       @default(now())
  message   PrivateMessage @relation(fields: [messageId], references: [id])
  user      User           @relation(fields: [userId], references: [id])

  @@unique([messageId, userId])
  @@index([userId], map: "PrivateMessageSeen_userId_fkey")
}

// Các model khác (MPC, MPhone, PurchaseHistory, TransactionHistory) chưa được định nghĩa, bạn có thể thêm nếu cần

model ServicePackage {
  id            Int               @id @default(autoincrement())
  name          String
  packageType   String            @default("Thông thường")
  description   String?
  price         Decimal
  quantityPC    Int
  quantityPhone Int
  durationDays  Int
  Show          Int               @default(1)
  purchases     PurchaseHistory[]
}

model TransactionHistory {
  id      Int      @id @default(autoincrement())
  userId  Int
  amount  Decimal
  type    String   @default("Deposit")
  date    DateTime @default(now())
  status  String
  Content String
  user    User     @relation(fields: [userId], references: [id])

  @@index([userId], map: "TransactionHistory_userId_fkey")
}

model PurchaseHistory {
  id             Int            @id @default(autoincrement())
  userId         Int
  packageId      Int
  purchaseDate   DateTime       @default(now())
  expirationDate DateTime
  servicePackage ServicePackage @relation(fields: [packageId], references: [id])
  user           User           @relation(fields: [userId], references: [id])

  @@index([packageId], map: "PurchaseHistory_packageId_fkey")
  @@index([userId], map: "PurchaseHistory_userId_fkey")
}

model MPhone {
  id             Int      @id @default(autoincrement())
  userId         Int
  phoneId        String
  name           String
  createdDate    DateTime @default(now())
  expirationDate DateTime
  Note           String
  user           User     @relation(fields: [userId], references: [id])

  @@index([userId], map: "MPhone_userId_fkey")
}

model MPC {
  id                                    Int      @id @default(autoincrement())
  userId                                Int
  pcId                                  String
  name                                  String
  createdDate                           DateTime @default(now())
  expirationDate                        DateTime
  Note                                  String
  sttempListProxyLaunchApp              String
  sttempListProxyIDVerify               String
  sttempUserAgent                       String
  sttempPhoneNumber                     String
  sttempFirstName                       String
  sttempLastName                        String
  sttempWipe                            String
  stlaunchAppSpeed                      String   @default("High")
  stlaunchAppRun                        String   @default("Facebook")
  stlaunchListWipe                      String   @default("ListItem")
  stlaunchIDGen                         String   @default("Phone")
  stlaunchIDVerify                      String   @default("Tempmail")
  stnetworkTypeNetwork                  String   @default("None")
  stnetworkTypeConnect                  String   @default("Aper")
  stnetworkTypeProxyIDVerify            Int      @default(0)
  stotpGmail                            String   @default("https://sptmail.com = api_here*facebook")
  stotpHotmail                          String   @default("https://unlimitmail.com = api_here*5")
  stotpTempmail                         String   @default("None")
  stotpPhone                            String   @default("https://thuesim.app = api_here*facebook")
  stotpIcloud                           String   @default("https://cubemmo.net = api_here*5")
  sttimeDelayBeforeOpenApp              Int      @default(0)
  sttimeDelayAfterOpenApp               Int      @default(0)
  sttimeDelayClickSignUP                Int      @default(0)
  sttimeOutMethodScriptSignUP           Int      @default(300)
  sttimeOutMethodScriptCheckSignUP      Int      @default(300)
  sttimeOutMethodScriptVerify           Int      @default(300)
  sttimeOutMethodScriptUpAvatar         Int      @default(100)
  sttimeTryAgainSendOTP                 Int      @default(3)
  stuploadtowebsiteType                 Int      @default(0)
  stuploadtowebsiteFormat               String   @default("{deviceTemp.Uid}|{deviceInfoAPI.PASSWORD}|{deviceTemp.Cookie}|{deviceTemp.Token}|{deviceTemp.MailID}|{deviceTemp.MailPass}|{currentDateTime}|{deviceInfoAPI.FULLNAME}")
  stuploadtowebsiteURL                  String   @default("https://shipclone.com/api/importAccount.php?code=1&api_key=2&account=*[FacebookApp] .Verified(VR)")
  staperchangeNETWORK                   Int      @default(0)
  staperchangeBUILDOS                   Int      @default(0)
  staperchangeGPS                       Int      @default(0)
  staperchangeSERIAL                    Int      @default(0)
  staperchangeFINGERPRINT               Int      @default(0)
  staperchangeHOST                      Int      @default(0)
  staperchangeDEVICE                    Int      @default(0)
  staperchangeBOOTLOADER                Int      @default(0)
  staperchangeRELEASE                   Int      @default(0)
  staperchangeWIPEADVANCED              Int      @default(0)
  staperchangeHIDEBYPASSROOT            Int      @default(0)
  staperchangeWIFITO4G                  Int      @default(0)
  staperchangeHIDEVPN                   Int      @default(0)
  staperchangeANTITRACKING              Int      @default(0)
  staperchangeKEYGUARDMANAGER           Int      @default(0)
  staperchangeSTACKTRACE                Int      @default(0)
  staperchangeLOCKPATTERNUTILS          Int      @default(0)
  staperchangeHIDEUSBDEBUG              Int      @default(0)
  staperchangeBATTERYMANAGER            Int      @default(0)
  staperchangeHIDEINSTRUMENTATION       Int      @default(0)
  staperchangeHIDEINPUTMANAGER          Int      @default(0)
  staperchangeHIDEACCESSIBILITYNODEINFO Int      @default(0)
  staperchangeHIDEADB                   Int      @default(0)
  staperchangeGOOGLEAUTHUTIL            Int      @default(0)
  staperchangePackageSDK                Int      @default(0)
  staperchangeAPIGOOGLEPLAYSERVICES     Int      @default(0)
  staperchangeDNSRESOLUTION             Int      @default(0)
  staperchangeEBPF                      Int      @default(0)
  staperchangeBYPASSSERVERSIDEAI        Int      @default(0)
  staperchangeOPENGLRENDERER            Int      @default(0)
  staperchangetypePHONEINFO             String
  staperchangeNAME                      String   @default("vi_VN")
  staperchangeCOUNTRY                   String   @default("VN")
  staperchangeCarrier                   String   @default("AS-COUNTRY")
  staperchangePHONENUMBER               String   @default("AS-COUNTRY")
  staperchangeEMAIL                     String   @default("8-12|@gmail.com|com.google")
  staperchangeLANGUAGE                  String   @default("US")
  staperchangeUSERAGENT                 String   @default("None")
  user                                  User     @relation(fields: [userId], references: [id])

  @@index([userId], map: "MPC_userId_fkey")
}
