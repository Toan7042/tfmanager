{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/TON/Desktop/WEBCODE/NextJS/TFKey/tf-manager/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\r\n\r\nconst prisma = new PrismaClient();\r\nexport default prisma;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;uCAChB","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/TON/Desktop/WEBCODE/NextJS/TFKey/tf-manager/app/api/auth/register/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport prisma from \"@/lib/prisma\";\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const { username, password, phone } = await req.json();\r\n\r\n    if (!username || !password || !phone) {\r\n      return NextResponse.json({ error: \"Thiếu thông tin!\" }, { status: 400 });\r\n    }\r\n\r\n    // Kiểm tra số điện thoại\r\n    const phoneRegex = /^[0-9]{10}$/;\r\n    if (!phoneRegex.test(phone)) {\r\n      return NextResponse.json({ error: \"Số điện thoại không hợp lệ!\" }, { status: 400 });\r\n    }\r\n\r\n    // Kiểm tra mật khẩu\r\n    if (password.length < 6) {\r\n      return NextResponse.json({ error: \"Mật khẩu phải có ít nhất 6 ký tự!\" }, { status: 400 });\r\n    }\r\n\r\n    // Kiểm tra tài khoản đã tồn tại\r\n    const existingUser = await prisma.user.findUnique({ where: { username } });\r\n    if (existingUser) {\r\n      return NextResponse.json({ error: \"Tài khoản đã tồn tại!\" }, { status: 400 });\r\n    }\r\n\r\n    // Tạo tài khoản mới\r\n    const newUser = await prisma.user.create({\r\n      data: { username, password, phone },\r\n    });\r\n\r\n    return NextResponse.json({ message: \"Đăng ký thành công!\", user: newUser });\r\n  } catch (_) {\r\n    return NextResponse.json({ error: \"Lỗi server!\" }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,IAAI;QAEpD,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO;YACpC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAmB,GAAG;gBAAE,QAAQ;YAAI;QACxE;QAEA,yBAAyB;QACzB,MAAM,aAAa;QACnB,IAAI,CAAC,WAAW,IAAI,CAAC,QAAQ;YAC3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA8B,GAAG;gBAAE,QAAQ;YAAI;QACnF;QAEA,oBAAoB;QACpB,IAAI,SAAS,MAAM,GAAG,GAAG;YACvB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAoC,GAAG;gBAAE,QAAQ;YAAI;QACzF;QAEA,gCAAgC;QAChC,MAAM,eAAe,MAAM,+GAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YAAE,OAAO;gBAAE;YAAS;QAAE;QACxE,IAAI,cAAc;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAwB,GAAG;gBAAE,QAAQ;YAAI;QAC7E;QAEA,oBAAoB;QACpB,MAAM,UAAU,MAAM,+GAAA,CAAA,UAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YACvC,MAAM;gBAAE;gBAAU;gBAAU;YAAM;QACpC;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAuB,MAAM;QAAQ;IAC3E,EAAE,OAAO,GAAG;QACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAc,GAAG;YAAE,QAAQ;QAAI;IACnE;AACF","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}