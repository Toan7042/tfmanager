{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/TON/Desktop/WEBCODE/NextJS/TFKey/tf-manager/app/api/auth/register/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport prisma from \"@/lib/prisma\"; // Kiểm tra xem bạn đã có lib này chưa\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const { username, password } = await req.json();\r\n\r\n    if (!username || !password) {\r\n      return NextResponse.json({ error: \"Thiếu thông tin!\" }, { status: 400 });\r\n    }\r\n\r\n    const existingUser = await prisma.user.findUnique({ where: { username } });\r\n    if (existingUser) {\r\n      return NextResponse.json({ error: \"Tài khoản đã tồn tại!\" }, { status: 400 });\r\n    }\r\n\r\n    const hashedPassword = await bcrypt.hash(password, 10);\r\n\r\n    const newUser = await prisma.user.create({\r\n      data: {\r\n        username,\r\n        password: hashedPassword,\r\n      },\r\n    });\r\n\r\n    return NextResponse.json({ message: \"Đăng ký thành công!\", user: newUser });\r\n  } catch (error) {\r\n    return NextResponse.json({ error: \"Lỗi server!\" }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;;;;;;;AAGO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;QAE7C,IAAI,CAAC,YAAY,CAAC,UAAU;YAC1B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAmB,GAAG;gBAAE,QAAQ;YAAI;QACxE;QAEA,MAAM,eAAe,MAAM,OAAO,IAAI,CAAC,UAAU,CAAC;YAAE,OAAO;gBAAE;YAAS;QAAE;QACxE,IAAI,cAAc;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAwB,GAAG;gBAAE,QAAQ;YAAI;QAC7E;QAEA,MAAM,iBAAiB,MAAM,mIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU;QAEnD,MAAM,UAAU,MAAM,OAAO,IAAI,CAAC,MAAM,CAAC;YACvC,MAAM;gBACJ;gBACA,UAAU;YACZ;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAuB,MAAM;QAAQ;IAC3E,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAc,GAAG;YAAE,QAAQ;QAAI;IACnE;AACF","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}