{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { withAuth } from \"next-auth/middleware\";\n\nexport default withAuth(\n  function middleware(req) {\n    const url = req.nextUrl;\n    const token = req.nextauth.token;\n    const role = token?.role;\n\n    console.log(\"Middleware running - URL:\", url.pathname);\n    console.log(\"User role:\", role || \"Chưa đăng nhập\");\n\n    // Chặn truy cập trang /admin nếu không phải admin\n    if (url.pathname.startsWith(\"/admin\") && role !== \"admin\") {\n      console.log(\"Người dùng không có quyền admin, chuyển hướng về trang chủ...\");\n      return NextResponse.redirect(new URL(\"/\", req.url));\n    }\n\n    // Bảo mật: Chặn API nếu không có token\n    if (url.pathname.startsWith(\"/api\") && !token) {\n      console.log(\"Người dùng chưa đăng nhập, chặn API...\");\n      return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\n    }\n\n    return NextResponse.next();\n  },\n  {\n    callbacks: {\n      authorized: ({ token }) => {\n        console.log(\"Token kiểm tra trong middleware:\", token);\n        return !!token; // Nếu không có token, chặn luôn\n      },\n    },\n  }\n);\n\nexport const config = {\n  matcher: [\n    \"/admin/:path*\",\n    \"/dashboard/:path*\",\n    \"/community/:path*\",\n    \"/mydevices/:path*\",\n    \"/servicepackage/:path*\",\n    \"/profile/:path*\",\n    \"/api/:path*\", // Chặn API nếu chưa đăng nhập\n  ],\n};\n\n\n// import { NextResponse } from \"next/server\";\n// import { withAuth } from \"next-auth/middleware\";\n\n// export default withAuth(\n//   function middleware(req) {\n//     const url = req.nextUrl;\n//     const role = req.nextauth.token?.role;\n\n//     console.log(\"Middleware running - URL:\", url.pathname);\n//     console.log(\"User role:\", role);\n\n//     if (url.pathname.startsWith(\"/admin\") && role !== \"admin\") {\n//       console.log(\"Redirecting non-admin user to home...\");\n//       return NextResponse.redirect(new URL(\"/\", req.url));\n//     }\n//   },\n//   {\n//     callbacks: {\n//       authorized: ({ token }) => {\n//         console.log(\"Token in middleware:\", token);\n//         return !!token;\n//       },\n//     },\n//   }\n// );\n\n// export const config = {\n//   matcher: [\"/admin/:path*\", \"/dashboard/:path*\", \"/community/:path*\", \"/mydevices/:path*\", \"/servicepackage/:path*\", \"/profile/:path*\"],\n// };\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;;;uCAEe,CAAA,GAAA,kJAAA,CAAA,WAAQ,AAAD,EACpB,SAAS,WAAW,GAAG;IACrB,MAAM,MAAM,IAAI,OAAO;IACvB,MAAM,QAAQ,IAAI,QAAQ,CAAC,KAAK;IAChC,MAAM,OAAO,OAAO;IAEpB,QAAQ,GAAG,CAAC,6BAA6B,IAAI,QAAQ;IACrD,QAAQ,GAAG,CAAC,cAAc,QAAQ;IAElC,kDAAkD;IAClD,IAAI,IAAI,QAAQ,CAAC,UAAU,CAAC,aAAa,SAAS,SAAS;QACzD,QAAQ,GAAG,CAAC;QACZ,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,IAAI,GAAG;IACnD;IAEA,uCAAuC;IACvC,IAAI,IAAI,QAAQ,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO;QAC7C,QAAQ,GAAG,CAAC;QACZ,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAe,GAAG;YAAE,QAAQ;QAAI;IACpE;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B,GACA;IACE,WAAW;QACT,YAAY,CAAC,EAAE,KAAK,EAAE;YACpB,QAAQ,GAAG,CAAC,oCAAoC;YAChD,OAAO,CAAC,CAAC,OAAO,gCAAgC;QAClD;IACF;AACF;AAGK,MAAM,SAAS;IACpB,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;KACD;AACH,GAGA,8CAA8C;CAC9C,mDAAmD;CAEnD,2BAA2B;CAC3B,+BAA+B;CAC/B,+BAA+B;CAC/B,6CAA6C;CAE7C,8DAA8D;CAC9D,uCAAuC;CAEvC,mEAAmE;CACnE,8DAA8D;CAC9D,6DAA6D;CAC7D,QAAQ;CACR,OAAO;CACP,MAAM;CACN,mBAAmB;CACnB,qCAAqC;CACrC,sDAAsD;CACtD,0BAA0B;CAC1B,WAAW;CACX,SAAS;CACT,MAAM;CACN,KAAK;CAEL,0BAA0B;CAC1B,4IAA4I;CAC5I,KAAK"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}